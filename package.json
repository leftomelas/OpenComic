{
	"name": "opencomic",
	"productName": "OpenComic",
	"version": "1.6.0",
	"main": "scripts/main.js",
	"type": "commonjs",
	"keywords": [
		"comics",
		"manga",
		"books"
	],
	"description": "Comic and manga reader",
	"homepage": "https://github.com/ollm/OpenComic#readme",
	"license": "GPL-3.0",
	"author": {
		"name": "Oleguer Llopart",
		"email": "oleguer.llopart.mora@gmail.com",
		"url": "https://github.com/ollm"
	},
	"contributors": [],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ollm/OpenComic.git"
	},
	"scripts": {
		"start": "npm run prebuild-start && electron scripts/main.js --no-sandbox",
		"test": "node scripts/test.js",
		"prebuild": "npm run test && npm run prebuild-start",
		"prebuild-mac": "node scripts/prebuild-mac.js",
		"prebuild-mac-store": "node scripts/prebuild-mac.js --store",
		"prebuild-start": "node scripts/build.js && node themes/material-design/colors/generate-colors.js && node languages/fill-languages.js",
		"prebuild-store": "node scripts/build-store.js",
		"prebuild-folder-portable": "node scripts/build-folder-portable.js",
		"postbuild": "node scripts/test-postbuild.js",
		"postbuild-mas": "node scripts/test-postbuild-mas.js",
		"rename-portable": "node scripts/rename.js --portable",
		"rename-folder-portable": "node scripts/rename.js --folder-portable",
		"rename-win-arm": "node scripts/rename.js --win-arm",
		"watch": "nodemon --ignore 'dist/' --ignore scripts/builded --watch * --exec npm run start",
		"build": "npm run prebuild && electron-builder build && npm run postbuild",
		"build-dist": "npm run build-linux-folder-portable && npm run prebuild && electron-builder --x64 --linux deb rpm AppImage 7z flatpak && electron-builder --arm64 --linux deb rpm AppImage 7z flatpak && npm run postbuild",
		"build-linux": "npm run prebuild && electron-builder --x64 --linux deb rpm AppImage 7z tar.gz && npm run postbuild",
		"build-linux-folder-portable": "npm run prebuild && npm run prebuild-folder-portable && electron-builder --x64 --linux 7z && electron-builder --arm64 --linux 7z && npm run rename-folder-portable && npm run postbuild",
		"build-deb": "npm run prebuild && electron-builder --x64 --linux deb && npm run postbuild",
		"build-rpm": "npm run prebuild && electron-builder --x64 --linux rpm && npm run postbuild",
		"build-snap": "npm run prebuild && electron-builder --x64 --linux snap && npm run postbuild",
		"build-snap-store": "npm run prebuild && npm run prebuild-store && electron-builder --x64 --linux snap && npm run postbuild",
		"build-flatpak": "npm run prebuild && electron-builder --x64 --linux flatpak && npm run postbuild",
		"build-appimage": "npm run prebuild && electron-builder --x64 --linux AppImage && npm run postbuild",
		"build-tar": "npm run prebuild && electron-builder --x64 --linux tar.gz && npm run postbuild",
		"build-tar-store": "npm run prebuild && npm run prebuild-store && electron-builder --x64 --linux tar.gz && electron-builder --arm64 --linux tar.gz && npm run postbuild",
		"build-zip": "npm run prebuild && electron-builder --x64 --linux zip && npm run postbuild",
		"build-7z": "npm run prebuild && electron-builder --x64 --linux 7z && npm run postbuild",
		"build-win": "npm run prebuild && electron-builder --arm64 --win nsis && npm run rename-win-arm && electron-builder --win nsis portable && npm run rename-portable && npm run prebuild-folder-portable && electron-builder --win portable 7z && npm run rename-folder-portable && npm run postbuild",
		"build-win-arm": "npm run prebuild && electron-builder --arm64 --win nsis && npm run rename-win-arm && npm run postbuild",
		"build-nsis": "npm run prebuild && electron-builder --win nsis && npm run postbuild",
		"build-appx": "npm run prebuild && electron-builder --win appx && npm run postbuild",
		"build-appx-store": "npm run prebuild && npm run prebuild-store && electron-builder --win appx && npm run postbuild",
		"build-dir": "npm run prebuild && electron-builder --win --dir && npm run postbuild",
		"build-portable": "npm run prebuild && electron-builder --win portable && npm run postbuild",
		"build-folder-portable": "npm run prebuild && npm run prebuild-folder-portable && electron-builder --win portable && npm run rename-folder-portable && npm run postbuild",
		"build-folder-portable-7z": "npm run prebuild && npm run prebuild-folder-portable && electron-builder --win 7z && npm run rename-folder-portable && npm run postbuild",
		"build-mac": "npm run prebuild && npm run prebuild-mac && env-cmd -f ./build/notarize.env -- electron-builder --mac 7z dmg pkg && env-cmd -f ./build/notarize.env -- electron-builder --arm64 --mac 7z dmg pkg && npm run postbuild",
		"build-mac-store": "npm run prebuild && npm run prebuild-mac-store && npm run prebuild-store && electron-builder --universal --mac mas && npm run postbuild",
		"build-mac-tar": "npm run prebuild && npm run prebuild-mac && env-cmd -f ./build/notarize.env -- electron-builder --mac tar.gz && npm run postbuild",
		"build-mac-zip": "npm run prebuild && npm run prebuild-mac && env-cmd -f ./build/notarize.env -- electron-builder --mac zip && npm run postbuild",
		"build-mac-dmg": "npm run prebuild && npm run prebuild-mac && env-cmd -f ./build/notarize.env -- electron-builder --mac dmg && env-cmd -f ./build/notarize.env -- electron-builder --arm64 --mac dmg && npm run postbuild",
		"build-mac-pkg": "npm run prebuild && npm run prebuild-mac && env-cmd -f ./build/notarize.env -- electron-builder --mac pkg && env-cmd -f ./build/notarize.env -- electron-builder --arm64 --mac pkg && npm run postbuild",
		"build-linux-arm": "npm run prebuild && electron-builder --arm64 --linux deb rpm AppImage 7z && npm run postbuild",
		"build-deb-arm": "npm run prebuild && electron-builder --arm64 --linux deb && npm run postbuild",
		"build-rpm-arm": "npm run prebuild && electron-builder --arm64 --linux rpm && npm run postbuild",
		"build-snap-arm": "npm run prebuild && electron-builder --arm64 --linux snap && npm run postbuild",
		"build-flatpak-arm": "npm run prebuild && electron-builder --arm64 --linux flatpak && npm run postbuild",
		"build-appimage-arm": "npm run prebuild && electron-builder --arm64 --linux AppImage && npm run postbuild",
		"build-tar-arm": "npm run prebuild && electron-builder --arm64 --linux tar.gz && npm run postbuild",
		"build-zip-arm": "npm run prebuild && electron-builder --arm64 --linux zip && npm run postbuild",
		"build-7z-arm": "npm run prebuild && electron-builder --arm64 --linux 7z && npm run postbuild",
		"snapcraft": "npm run prebuild && cd dist/__snap-amd64/ && snapcraft && npm run postbuild",
		"snapcraft-arm": "npm run prebuild && cd dist/__snap-arm64/ && snapcraft --target-arch=arm64 && npm run postbuild",
		"postinstall": "electron-builder install-app-deps && node scripts/zstd-copy-native.js"
	},
	"dependencies": {
		"@awo00/smb2": "^1.1.1",
		"@aws-sdk/client-s3": "^3.864.0",
		"@electron/remote": "^2.1.3",
		"@toondepauw/node-zstd": "^1.2.0",
		"7zip-bin-full": "^25.1.1",
		"basic-ftp": "^5.0.5",
		"bezier-js": "^6.1.4",
		"discord-rpc": "^4.0.1",
		"electron-json-storage": "^4.6.0",
		"electron-window-state": "^5.0.3",
		"epubjs": "^0.3.93",
		"fast-xml-parser": "^5.2.5",
		"foliate-js": "github:johnfactotum/foliate-js",
		"font-list": "^1.5.1",
		"fs-extra": "^11.3.1",
		"handlebars": "^4.7.8",
		"heic-decode": "^2.1.0",
		"image-size": "^2.0.2",
		"jpegxr": "^0.3.0",
		"jquery": "^3.7.1",
		"jquery-bez": "^1.0.11",
		"jxl-oxide-wasm": "^0.12.3",
		"lodash.isequal": "^4.5.0",
		"marked": "^16.1.2",
		"minimatch": "^10.0.3",
		"mv": "^2.1.1",
		"node-7z": "github:ollm/node-7z",
		"node-scp": "^0.0.25",
		"pdfjs-dist": "^5.4.54",
		"sanitize-html": "^2.17.0",
		"sharp": "^0.34.3",
		"short-windows-path": "^1.0.3",
		"shosho": "^1.4.3",
		"ssh2-sftp-client": "v12.0.1",
		"systeminformation": "^5.27.7",
		"webdav": "^5.8.0"
	},
	"devDependencies": {
		"electron": "^37.2.6",
		"electron-builder": "^26.0.19",
		"env-cmd": "^10.1.0",
		"node-abi": "^4.12.0",
		"nodemon": "^3.1.10"
	},
	"overrides": {
		"@napi-rs/canvas": "0.0.0"
	},
	"build": {
		"appId": "org.opencomic.app",
		"productName": "OpenComic",
		"executableName": "opencomic",
		"asar": true,
		"publish": null,
		"files": [
			"**/*",
			"!**/node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}",
			"!**/node_modules/*/{test,__tests__,tests,powered-test,example,examples}",
			"!**/node_modules/*.d.ts",
			"!**/node_modules/.bin",
			"!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}",
			"!.editorconfig",
			"!**/._*",
			"!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,.gitignore,.gitattributes}",
			"!**/{__pycache__,thumbs.db,.flowconfig,.idea,.vs,.nyc_output}",
			"!**/{appveyor.yml,.travis.yml,circle.yml}",
			"!**/{npm-debug.log,yarn.lock,.yarn-integrity,.yarn-metadata.json}",
			"!themes/*/templates",
			"!templates",
			"!images",
			"!node_modules/cpu-features/build/node_gyp_bins",
			"!node_modules/ssh2/lib/protocol/crypto/build/node_gyp_bins",
			"!node_modules/@img/",
			"node_modules/@img/*${arch}*/**/*",
			"!node_modules/@img/*linuxmusl*/**/*",
			"!node_modules/7zip-bin-full/+(linux|win|mac)/**",
			"node_modules/7zip-bin-full/${os}/${arch}",
			"!node_modules/pdfjs-dist/",
			"node_modules/pdfjs-dist/build/pdf.mjs",
			"node_modules/pdfjs-dist/build/pdf.worker.mjs",
			"node_modules/pdfjs-dist/image_decoders/pdf.image_decoders.mjs",
			"node_modules/pdfjs-dist/wasm",
			"node_modules/pdfjs-dist/cmaps",
			"images/icon-border-transparent.png",
			"images/logo.png",
			"images/logo.svg",
			"templates/index.html",
			"templates/about.html",
			"templates/ebook.render.html",
			"build/flatpak"
		],
		"asarUnpack": [
			"node_modules/sharp",
			"node_modules/@img",
			"node_modules/node-7z",
			"node_modules/7zip-bin-full",
			"node_modules/shosho",
			"node_modules/@toondepauw",
			"node_modules/pdfjs-dist",
			"node_modules/webdav",
			"node_modules/mime",
			"node_modules/foliate-js",
			"node_modules/jxl-oxide-wasm",
			"Pepper & Carrot",
			"build/flatpak"
		],
		"win": {
			"target": [
				"nsis",
				"appx",
				"portable"
			],
			"icon": "images/icon.ico"
		},
		"nsis": {
			"oneClick": false,
			"installerIcon": "images/icon.ico",
			"uninstallerIcon": "images/icon.ico",
			"installerHeaderIcon": "images/icon.ico"
		},
		"appx": {
			"identityName": "28270OleguerLlopart.OpenComic",
			"publisher": "CN=0DD8CE42-AD4F-4E11-9D0B-8FD4FFAC5DF0",
			"publisherDisplayName": "Oleguer Llopart",
			"applicationId": "OleguerLlopart.OpenComic",
			"backgroundColor": "#242a30",
			"languages": [
				"en",
				"es",
				"ca",
				"pt-BR",
				"fr",
				"hu",
				"it",
				"de",
				"cs",
				"ru",
				"th",
				"vi",
				"ja",
				"zh-Hans",
				"zh-Hant"
			]
		},
		"portable": {
			"useZip": true,
			"unpackDirName": "opencomic-portable"
		},
		"mac": {
			"target": [
				"dmg",
				"pkg",
				"mas"
			],
			"notarize": true,
			"forceCodeSigning": true,
			"gatekeeperAssess": true,
			"icon": "images/icon-mac.icns",
			"category": "public.app-category.graphics-design",
			"provisioningProfile": "build/OpenComic_Provisioning_Profile_2025_07.provisionprofile",
			"minimumSystemVersion": "10.15.0"
		},
		"mas": {
			"notarize": false,
			"type": "distribution",
			"entitlements": "build/entitlements.mas.plist",
			"entitlementsInherit": "build/entitlements.mas.inherit.plist",
			"provisioningProfile": "build/OpenComic_Provisioning_Profile_2025_07.provisionprofile",
			"singleArchFiles": "node_modules/**",
			"files": [
				"**/*",
				"!**/node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}",
				"!**/node_modules/*/{test,__tests__,tests,powered-test,example,examples}",
				"!**/node_modules/*.d.ts",
				"!**/node_modules/.bin",
				"!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}",
				"!.editorconfig",
				"!**/._*",
				"!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,.gitignore,.gitattributes}",
				"!**/{__pycache__,thumbs.db,.flowconfig,.idea,.vs,.nyc_output}",
				"!**/{appveyor.yml,.travis.yml,circle.yml}",
				"!**/{npm-debug.log,yarn.lock,.yarn-integrity,.yarn-metadata.json}",
				"!themes/*/templates",
				"!templates",
				"!images",
				"!node_modules/cpu-features/build/node_gyp_bins",
				"!node_modules/ssh2/lib/protocol/crypto/build/node_gyp_bins",
				"!node_modules/@img/*linuxmusl*/**/*",
				"!node_modules/pdfjs-dist/",
				"node_modules/pdfjs-dist/build/pdf.mjs",
				"node_modules/pdfjs-dist/build/pdf.worker.mjs",
				"node_modules/pdfjs-dist/image_decoders/pdf.image_decoders.mjs",
				"node_modules/pdfjs-dist/wasm",
				"images/icon-border-transparent.png",
				"images/logo.png",
				"images/logo.svg",
				"templates/index.html",
				"templates/about.html",
				"templates/ebook.render.html",
				"build/flatpak"
			]
		},
		"linux": {
			"target": [
				"AppImage",
				"deb",
				"rpm",
				"snap"
			],
			"icon": "images/icons",
			"category": "Graphics",
			"mimeTypes": [
				"application/x-cbz",
				"application/x-cbr",
				"application/x-cb7",
				"application/x-cbt",
				"application/pdf",
				"application/x-bzpdf",
				"application/x-gzpdf",
				"application/epub+zip"
			]
		},
		"snap": {
			"base": "core20",
			"buildPackages": [],
			"stagePackages": [
				"default"
			],
			"plugs": [
				"default",
				"removable-media"
			]
		},
		"flatpak": {
			"runtime": "org.freedesktop.Platform",
			"runtimeVersion": "24.08",
			"sdk": "org.freedesktop.Sdk",
			"base": "org.electronjs.Electron2.BaseApp",
			"baseVersion": "24.08"
		},
		"protocols": [
			{
				"name": "OpenComic",
				"schemes": [
					"opencomic"
				]
			}
		],
		"fileAssociations": [
			{
				"ext": "cbz",
				"icon": "images/icons/associations/cbz",
				"role": "Viewer",
				"mimeType": "application/x-cbz"
			},
			{
				"ext": "cbr",
				"icon": "images/icons/associations/cbr",
				"role": "Viewer",
				"mimeType": "application/x-cbr"
			},
			{
				"ext": "cb7",
				"icon": "images/icons/associations/cb7",
				"role": "Viewer",
				"mimeType": "application/x-cb7"
			},
			{
				"ext": "cbt",
				"icon": "images/icons/associations/cbt",
				"role": "Viewer",
				"mimeType": "application/x-cbt"
			},
			{
				"ext": "pdf",
				"icon": "images/icons/associations/pdf",
				"role": "Viewer",
				"mimeType": "application/pdf"
			},
			{
				"ext": "epub",
				"icon": "images/icons/associations/epub",
				"role": "Viewer",
				"mimeType": "application/epub+zip"
			}
		]
	}
}
